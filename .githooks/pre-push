#!/bin/bash

list="issue spike task"

listRE="^($(printf '%s\n' "$list" | tr ' ' '|'))/"

BRANCH_NAME=$(git branch --show-current | grep -E "$listRE" | sed 's/* //')

printf '\n\033[0;105mChecking "%s"... \033[0m\n', "$BRANCH_NAME"

if echo "$BRANCH_NAME" | grep -q '^(rebase)|(production)*$'; then
 	printf '\n\033[0;32mNo checks necessary on "%s", pushing now... ðŸŽ‰\033[0m\n', "$BRANCH_NAME"
	exit 0
fi

# Check for existence of "new or modified" test files
TEST_FILES="$(git diff --diff-filter=ACDM --name-only --cached | grep -E '(./test/*)$')"
RUBY_FILES="$(git diff --diff-filter=ACDM --name-only --cached | grep -E '(_test\.rb)$')"
PRE_STATUS="$(git status | wc -l)"

WORK_DONE=0

if [ -z "$TEST_FILES" ]; then
  printf '\n\033[0;41mThere are currently no new tests found in "%s". ðŸ¤¨\033[0m\n', "$BRANCH_NAME"
  printf '\n\033[0;32mExiting now to allow tests to be added... ðŸŽ‰\033[0m\n'
  exit 1
fi


if [ -n "$RUBY_FILES" ]; then
  printf '\nRunning Rails Tests...'
  bundle exec rails test
  RUBY_TEST_EXIT_CODE=$?
  WORK_DONE=1
else
  RUBY_TEST_EXIT_CODE=0
fi

if [ -n "$RUBY_FILES" ]; then
  printf '\nRunning System Tests...'
  bundle exec rails test:system
  RUBY_SYSTEM_EXIT_CODE=$?
  WORK_DONE=1
else
  RUBY_SYSTEM_EXIT_CODE=0
fi


if [ ! $RUBY_TEST_EXIT_CODE -eq 0 ] || [ ! $RUBY_SYSTEM_EXIT_CODE -eq 0 ]; then
  printf '\n\033[0;31mCannot push, tests are failing. Use --no-verify to force push. ðŸ˜–\033[0m\n'
  exit 1
fi

if [ $WORK_DONE = 1 ]; then
  printf '\n\033[0;32mAll tests are green, pushing... ðŸŽ‰\033[0m\n'
fi

exit 0
